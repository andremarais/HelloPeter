DiscHealth <- readRDS(file.path(getwd(),"data/Discovery Health.RDS"))
DiscLife <- readRDS(file.path(getwd(),"data/Discovery Life.RDS"))
DiscInsure <- readRDS(file.path(getwd(),"data/Discovery Insure.RDS"))
Liberty <- readRDS(file.path(getwd(),"data/Liberty.RDS"))
Metropolitan <- readRDS(file.path(getwd(),"data/Metropolitan.RDS"))
OutSurance <- readRDS(file.path(getwd(),"data/OutSurance.RDS"))
MiWay <- readRDS(file.path(getwd(),"data/MiWay.RDS"))
HP.data <- rbind(Mom,
MomHealth,
MSTI,
DiscHealth,
DiscLife,
DiscInsure,
Liberty,
Metropolitan,
OutSurance
)
HP.data$content <- NULL
HP.data$response.time <- round(difftime(as.POSIXct.numeric(HP.data$response.date,
, origin = "1970-01-01"),
as.POSIXct.numeric(HP.data$post.date,
, origin = "1970-01-01"),
units = "hours",
tz = "GMT"),4)
hp1 <- HP.data[which(substring(as.POSIXct.numeric(HP.data$post.date, origin = "1970-01-01"), 1, 7) == "2015-04"),]
hp1$response.time[which(hp1$Insurer.proper.name == "Discovery Insure")]
hp1[which(hp1$Insurer.proper.name == "Discovery Insure" & hp1$response.time < 0),]
colnames(HP.data)
colnames(HP.data)[7] <- "response.delay"
hp1 <- HP.data[which(substring(as.POSIXct.numeric(HP.data$post.date, origin = "1970-01-01"), 1, 7) == "2015-04" &
HP.data$post.date > 0),]
response.time <- aggregate(data = hp1, response.delay ~ Insurer.proper.name , FUN = mean)
response.time
hp1 <- HP.data[which(substring(as.POSIXct.numeric(HP.data$post.date, origin = "1970-01-01"), 1, 7) == "2015-04" &
HP.data$response.date > 0),]
response.time <- aggregate(data = hp1, response.delay ~ Insurer.proper.name , FUN = mean)
response.time
str(hp1)
as.data.frame.matrix(table(hp1[,c('Insurer.proper.name', 'type')]))
summary <- as.data.frame.matrix(table(hp1[,c('Insurer.proper.name', 'type')]))
summary$Compliment.Ratio <- percent(summary$Compliment/ (summary$Complaint + summary$Compliment))
summary$Conversion.Ratio <- percent(summary$Conversion/ summary$Complaint)
require(scales)
summary$Compliment.Ratio <- percent(summary$Compliment/ (summary$Complaint + summary$Compliment))
summary$Conversion.Ratio <- percent(summary$Conversion/ summary$Complaint)
summary$Pname <- rownames(summary)
summary
response.time
summary.table <- merge(summary, response.time, by.x = 'Pname', by.y = 'Insurer.proper.name')
summary.table
colnames(summary.table) <- c("Insurer", "Complaints", "Compliments", "Conversions", "Conversion ratio", "Compliment ratio", "Response time (hours)")
summary.table[order((summary.table$Complaint + summary.table$Compliment), decreasing = T),]
summary.table
summary.table[order((summary.table$Complaint + summary.table$Compliment), decreasing = T),]
order((summary.table$Complaint + summary.table$Compliment), decreasing = T)
summary.table[order((summary.table$Complaints + summary.table$Compliments), decreasing = T),]
summary <- as.data.frame.matrix(table(hp1[,c('Insurer.proper.name', 'type')]))
summary$Compliment.Ratio <- percent(summary$Compliment/ (summary$Complaint + summary$Compliment))
summary$Conversion.Ratio <- percent(summary$Conversion/ summary$Complaint)
summary$Pname <- rownames(summary)
summary
summary.table <- merge(summary, response.time, by.x = 'Pname', by.y = 'Insurer.proper.name')
summary.table
colnames(summary.table) <- c("Insurer", "Complaints", "Compliments", "Conversions", "Compliment ratio", "Conversion ratio", "Response time (hours)")
summary.table[order((summary.table$Complaints + summary.table$Compliments), decreasing = T),]
shiny::runApp()
shiny::runApp()
shiny::runApp()
Mom <- readRDS(file.path(getwd(),"data/Momentum.RDS"))
complaints <- function(insurer) {
if (insurer == "Mom") {
hp.df <- Mom; p.name <- "Momentum"
} else if (insurer == "MomHealth") {
hp.df <- MomHealth; p.name <- "Momentum Health"
} else if (insurer == "MSTI") {
hp.df <- MSTI; p.name <- "Momentum Short Term"
} else if (insurer == "DiscHealth") {
hp.df <- DiscHealth; p.name <- "Discovery Health"
} else if (insurer == "DiscLife") {
hp.df <- DiscLife; p.name <- "Discovery Life"
} else if (insurer == "DiscInsure") {
hp.df <- DiscInsure; p.name <- "Discovery Insure"
} else if (insurer == "Liberty") {
hp.df <- Liberty; p.name <- "Liberty"
} else if (insurer == "Metropolitan") {
hp.df <- Metropolitan; p.name <- "Metropolitan"
} else if (insurer == "Outsurance") {
hp.df <- OutSurance; p.name <- "Outsurance"
} else if (insurer == "MiWay") {
hp.df <- MiWay; p.name <- "MiWay"
}
hp.df$response.date <- as.Date(hp.df$response.date, format = "%Y-%m-%d")
hp.df$post.date <- as.Date(hp.df$post.date, format = "%Y-%m-%d")
hp.df <- hp.df[which(hp.df$post.date < paste(substring(as.character(Sys.Date()), 1, 7), "01", sep = "-" )),]
hp.df$response.time <- hp.df$response.date - hp.df$post.date
hp.df$post.date.month <- as.Date(paste(substring(as.character(hp.df$post.date), 1, 7), "01", sep = "-" ))
ave.time.pm <- data.frame(aggregate(data = hp.df, response.time ~ post.date.month, FUN = mean))
ave.time.pm$response.time <- as.numeric(ave.time.pm$response.time)
ave.time.pm$post.date.month <- as.Date(ave.time.pm$post.date.month )
time.plot <- ggplot(data = ave.time.pm, aes(x = post.date.month, y = response.time, fill = response.time)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
ggtitle(paste(p.name, "turaround time")) +
xlab("Date") +
ylab("Average number of days")
download.time.data <<- ave.time.pm
download.time.plot <<- time.plot
return(time.plot)
}
complaints("Mon")
complaints("Mom")
complaints <- function(insurer) {
if (insurer == "Mom") {
hp.df <- Mom; p.name <- "Momentum"
} else if (insurer == "MomHealth") {
hp.df <- MomHealth; p.name <- "Momentum Health"
} else if (insurer == "MSTI") {
hp.df <- MSTI; p.name <- "Momentum Short Term"
} else if (insurer == "DiscHealth") {
hp.df <- DiscHealth; p.name <- "Discovery Health"
} else if (insurer == "DiscLife") {
hp.df <- DiscLife; p.name <- "Discovery Life"
} else if (insurer == "DiscInsure") {
hp.df <- DiscInsure; p.name <- "Discovery Insure"
} else if (insurer == "Liberty") {
hp.df <- Liberty; p.name <- "Liberty"
} else if (insurer == "Metropolitan") {
hp.df <- Metropolitan; p.name <- "Metropolitan"
} else if (insurer == "Outsurance") {
hp.df <- OutSurance; p.name <- "Outsurance"
} else if (insurer == "MiWay") {
hp.df <- MiWay; p.name <- "MiWay"
}
hp.df$response.date <- as.Date(hp.df$response.date, format = "%Y-%m-%d", origin = "1970-01-01")
hp.df$post.date <- as.Date(hp.df$post.date, format = "%Y-%m-%d", origin = "1970-01-01")
hp.df <- hp.df[which(hp.df$post.date < paste(substring(as.character(Sys.Date()), 1, 7), "01", sep = "-" )),]
hp.df$response.time <- hp.df$response.date - hp.df$post.date
hp.df$post.date.month <- as.Date(paste(substring(as.character(hp.df$post.date), 1, 7), "01", sep = "-" ))
ave.time.pm <- data.frame(aggregate(data = hp.df, response.time ~ post.date.month, FUN = mean))
ave.time.pm$response.time <- as.numeric(ave.time.pm$response.time)
ave.time.pm$post.date.month <- as.Date(ave.time.pm$post.date.month )
time.plot <- ggplot(data = ave.time.pm, aes(x = post.date.month, y = response.time, fill = response.time)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
ggtitle(paste(p.name, "turaround time")) +
xlab("Date") +
ylab("Average number of days")
download.time.data <<- ave.time.pm
download.time.plot <<- time.plot
return(time.plot)
}
complaints("Mom")
hp.df <- Mom
as.POSIXct.numeric(hp.df$response.date, format = "%Y-%m-%d", origin = "1970-01-01")
as.character( as.POSIXct.numeric(hp.df$response.date, format = "%Y-%m-%d", origin = "1970-01-01"))
as.POSIXct.numeric(hp.df$post.date, format = "%Y-%m-%d", origin = "1970-01-01", tz = "GMT")
hp.df$response.date <- as.POSIXct.numeric(hp.df$response.date, format = "%Y-%m-%d", origin = "1970-01-01", tz = "GMT")
hp.df$post.date <- as.POSIXct.numeric(hp.df$post.date, format = "%Y-%m-%d", origin = "1970-01-01", tz = "GMT")
hp.df[which(hp.df$post.date < paste(substring(as.character(Sys.Date()), 1, 7), "01", sep = "-" )),]
?difftime
difftime(response.date,post.date, units = "hours")
difftime(hp.df$response.date,hp.df$post.date, units = "hours")
not.zero <- which(hp.df$response.date != 0)
hp.df$response.delay <- difftime(hp.df$response.date[not.zero],hp.df$post.date[not.zero], units = "hours")
as.Date(paste(substring(as.character(hp.df$post.date), 1, 7), "01", sep = "-" ))
hp.df$post.date.month <- as.Date(paste(substring(as.character(hp.df$post.date), 1, 7), "01", sep = "-" ))
hp.df$response.delay <- difftime(hp.df$response.date[not.zero],hp.df$post.date[not.zero], units = "hours")
ave.time.pm <- data.frame(aggregate(data = hp.df, response.delay ~ post.date.month, FUN = mean))
ave.time.pm
str(ave.time.pm)
ggplot(data = ave.time.pm, aes(x = post.date.month, y = response.time, fill = response.time)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
ggtitle(paste(p.name, "turaround time")) +
xlab("Date") +
ylab("Average number of days")
p.name <- "Momentum"
ggplot(data = ave.time.pm, aes(x = post.date.month, y = response.time, fill = response.time)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
ggtitle(paste(p.name, "turaround time")) +
xlab("Date") +
ylab("Average number of days")
ggplot(data = ave.time.pm, aes(x = post.date.month, y = response.delay, fill = response.delay)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
ggtitle(paste(p.name, "turaround time")) +
xlab("Date") +
ylab("Average number of days")
ave.time.pm$response.time <- as.numeric(ave.time.pm$response.time)
ave.time.pm$post.date.month <- as.Date(ave.time.pm$post.date.month )
ave.time.pm <- data.frame(aggregate(data = hp.df, response.delay ~ post.date.month, FUN = mean))
ave.time.pm$response.delay <- as.numeric(ave.time.pm$response.delay)
ave.time.pm$post.date.month <- as.Date(ave.time.pm$post.date.month )
ggplot(data = ave.time.pm, aes(x = post.date.month, y = response.delay, fill = response.delay)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
ggtitle(paste(p.name, "turaround time")) +
xlab("Date") +
ylab("Average number of days")
shiny::runApp()
hp.df$response.date <- as.POSIXct.numeric(hp.df$response.date, format = "%Y-%m-%d", origin = "1970-01-01", tz = "GMT")
hp.df$post.date <- as.POSIXct.numeric(hp.df$post.date, format = "%Y-%m-%d", origin = "1970-01-01", tz = "GMT")
hp.df <- hp.df[which(hp.df$post.date < paste(substring(as.character(Sys.Date()), 1, 7), "01", sep = "-" )),]
not.zero <- which(hp.df$response.date != 0)
hp.df$response.delay <- difftime(hp.df$response.date[not.zero],hp.df$post.date[not.zero], units = "hours")
hp.df$post.date.month <- as.Date(paste(substring(as.character(hp.df$post.date), 1, 7), "01", sep = "-" ))
ave.time.pm <- data.frame(aggregate(data = hp.df, response.delay ~ post.date.month, FUN = mean))
ave.time.pm$response.delay <- as.numeric(ave.time.pm$response.delay)
ave.time.pm$post.date.month <- as.Date(ave.time.pm$post.date.month )
time.plot <- ggplot(data = ave.time.pm, aes(x = post.date.month, y = response.delay, fill = response.delay)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
ggtitle(paste(p.name, "turaround time")) +
xlab("Date") +
ylab("Hours")
as.POSIXct.numeric(hp.df$response.date, format = "%Y-%m-%d", origin = "1970-01-01", tz = "GMT")
as.POSIXct.numeric(hp.df$response.date, origin = "1970-01-01", tz = "GMT")
(hp.df$response.date
hp.df$response.date,
hp.df$response.date
Mom <- readRDS(file.path(getwd(),"data/Momentum.RDS"))
str(Mom)
shiny::runApp()
str(Mom)
Mom$Insurer.proper.name
unique(Insurer.proper.name)
unique(Mom$Insurer.proper.name)
Mom$Insurer <- "Mom"
HP.data[which(HP.data$Insurer == insurer),]
HP.data <- rbind(Mom,
MomHealth,
MSTI,
DiscHealth,
DiscLife,
DiscInsure,
Liberty,
Metropolitan,
OutSurance
)
Mom <- readRDS(file.path(getwd(),"data/Momentum.RDS"))
MomHealth <- readRDS(file.path(getwd(),"data/Momentum Health.RDS"))
MSTI <- readRDS(file.path(getwd(),"data/Momentum Short Term.RDS"))
DiscHealth <- readRDS(file.path(getwd(),"data/Discovery Health.RDS"))
DiscLife <- readRDS(file.path(getwd(),"data/Discovery Life.RDS"))
DiscInsure <- readRDS(file.path(getwd(),"data/Discovery Insure.RDS"))
Liberty <- readRDS(file.path(getwd(),"data/Liberty.RDS"))
Metropolitan <- readRDS(file.path(getwd(),"data/Metropolitan.RDS"))
OutSurance <- readRDS(file.path(getwd(),"data/OutSurance.RDS"))
MiWay <- readRDS(file.path(getwd(),"data/MiWay.RDS"))
HP.data <- rbind(Mom,
MomHealth,
MSTI,
DiscHealth,
DiscLife,
DiscInsure,
Liberty,
Metropolitan,
OutSurance)
HP.data[which(HP.data$Insurer == insurer),]
insurer = "Mom"
HP.data[which(HP.data$Insurer == insurer),]
Mom$Insurer <- "Mom"
HP.data[which(HP.data$Insurer == insurer),]
insurer
head(Mom$Insurer)
which(HP.data$Insurer == insurer)
HP.data$Insurer
head(HP.data$Insurer, 100)
unique(HP.data$Insurer)
HP.data <- rbind(Mom,
MomHealth,
MSTI,
DiscHealth,
DiscLife,
DiscInsure,
Liberty,
Metropolitan,
OutSurance
)
HP.data[which(HP.data$Insurer == insurer),]
shiny::runApp()
shiny::runApp()
shiny::runApp()
Mom <- readRDS(file.path(getwd(),"data/Momentum.RDS"))
MomHealth <- readRDS(file.path(getwd(),"data/Momentum Health.RDS"))
MSTI <- readRDS(file.path(getwd(),"data/Momentum Short Term.RDS"))
DiscHealth <- readRDS(file.path(getwd(),"data/Discovery Health.RDS"))
DiscLife <- readRDS(file.path(getwd(),"data/Discovery Life.RDS"))
DiscInsure <- readRDS(file.path(getwd(),"data/Discovery Insure.RDS"))
Liberty <- readRDS(file.path(getwd(),"data/Liberty.RDS"))
Metropolitan <- readRDS(file.path(getwd(),"data/Metropolitan.RDS"))
OutSurance <- readRDS(file.path(getwd(),"data/OutSurance.RDS"))
HP.data <<- rbind(Mom,
MomHealth,
MSTI,
DiscHealth,
DiscLife,
DiscInsure,
Liberty,
Metropolitan,
OutSurance)
hp.df <- HP.data[which(HP.data$Insurer == insurer),]
insurer <- "Mon"
insurer <- "Mom"
hp.df <- HP.data[which(HP.data$Insurer == insurer),]
hp.df <- hp.df[which(hp.df$post.date < paste(substring(as.character(Sys.Date()), 1, 7), "01", sep = "-" )),]
not.zero <- which(hp.df$response.date != 0)
hp.df$response.delay <- difftime(hp.df$response.date[not.zero],hp.df$post.date[not.zero], units = "hours")
hp.df$post.date.month <- as.Date(paste(substring(as.character(hp.df$post.date), 1, 7), "01", sep = "-" ))
hp.df$response.delay <- difftime(hp.df$response.date[not.zero],hp.df$post.date[not.zero], units = "hours", origin = "1970-01-01")
hp.df$response.delay <- difftime(hp.df$response.date[not.zero],hp.df$post.date[not.zero], units = "hours")
hp.df$response.date
getwd()
Mom <- readRDS(file.path(getwd(),"data/Momentum.RDS"))
Mom <- readRDS(file.path(getwd(),"data/Momentum.RDS"))
MomHealth <- readRDS(file.path(getwd(),"data/Momentum Health.RDS"))
MSTI <- readRDS(file.path(getwd(),"data/Momentum Short Term.RDS"))
DiscHealth <- readRDS(file.path(getwd(),"data/Discovery Health.RDS"))
DiscLife <- readRDS(file.path(getwd(),"data/Discovery Life.RDS"))
DiscInsure <- readRDS(file.path(getwd(),"data/Discovery Insure.RDS"))
Liberty <- readRDS(file.path(getwd(),"data/Liberty.RDS"))
Metropolitan <- readRDS(file.path(getwd(),"data/Metropolitan.RDS"))
OutSurance <- readRDS(file.path(getwd(),"data/OutSurance.RDS"))
?saveRDS
Mom$Insurer
Mom$Insurer <- "Mom"
Mom$Insurer
saveRDS(Mom, "/data/Momentum.RDS")
getwd()
saveRDS(Mom, file.path(getwd(),"data/Momentum.RDS"))
MomHealth$Insurer <- "MomHealth"
saveRDS(MomHealth, file.path(getwd(),"data/Momentum Health.RDS"))
saveRDS(MSTI, file.path(getwd(),"data/Momentum Short Term.RDS"))
saveRDS(DiscHealth, file.path(getwd(),"data/Discovery Health.RDS"))
DiscLife$Insurer <- "DiscLife"
saveRDS(DiscLife, file.path(getwd(),"data/Discovery Life.RDS"))
saveRDS(DiscInsure, file.path(getwd(),"data/Discovery Insure.RDS"))
DiscInsure$Insurer <- "DiscInsure"
saveRDS(DiscInsure, file.path(getwd(),"data/Discovery Insure.RDS"))
Liberty$Insurer <- "Liberty"
saveRDS(Liberty, file.path(getwd(),"data/Liberty.RDS"))
Metropolitan$Insurer <- "Metropolitan"
saveRDS(Metropolitan, file.path(getwd(),"data/Metropolitan.RDS"))
OutSurance$Insurer <- "OutSurance"
saveRDS(OutSurance, file.path(getwd(),"data/OutSurance.RDS"))
Mom <- readRDS(file.path(getwd(),"data/Momentum.RDS"))
MomHealth <- readRDS(file.path(getwd(),"data/Momentum Health.RDS"))
MSTI <- readRDS(file.path(getwd(),"data/Momentum Short Term.RDS"))
DiscHealth <- readRDS(file.path(getwd(),"data/Discovery Health.RDS"))
DiscLife <- readRDS(file.path(getwd(),"data/Discovery Life.RDS"))
DiscInsure <- readRDS(file.path(getwd(),"data/Discovery Insure.RDS"))
Liberty <- readRDS(file.path(getwd(),"data/Liberty.RDS"))
Metropolitan <- readRDS(file.path(getwd(),"data/Metropolitan.RDS"))
OutSurance <- readRDS(file.path(getwd(),"data/OutSurance.RDS"))
HP.data <- rbind(Mom,
MomHealth,
MSTI,
DiscHealth,
DiscLife,
DiscInsure,
Liberty,
Metropolitan,
OutSurance)
unique(HP.data$Insurer)
MSTI$Insurer <- "MSTI"
saveRDS(MSTI, file.path(getwd(),"data/MSTI"))
saveRDS(MSTI, file.path(getwd(),"data/MSTI.RDS"))
DiscHealth$Insurer <- "DiscHealth"
saveRDS(DiscHealth, file.path(getwd(),"data/Discovery Health.RDS"))
Mom <- readRDS(file.path(getwd(),"data/Momentum.RDS"))
MomHealth <- readRDS(file.path(getwd(),"data/Momentum Health.RDS"))
MSTI <- readRDS(file.path(getwd(),"data/Momentum Short Term.RDS"))
DiscHealth <- readRDS(file.path(getwd(),"data/Discovery Health.RDS"))
DiscLife <- readRDS(file.path(getwd(),"data/Discovery Life.RDS"))
DiscInsure <- readRDS(file.path(getwd(),"data/Discovery Insure.RDS"))
Liberty <- readRDS(file.path(getwd(),"data/Liberty.RDS"))
Metropolitan <- readRDS(file.path(getwd(),"data/Metropolitan.RDS"))
OutSurance <- readRDS(file.path(getwd(),"data/OutSurance.RDS"))
#MiWay <- readRDS(file.path(getwd(),"data/MiWay.RDS"))
HP.data <- rbind(Mom,
MomHealth,
MSTI,
DiscHealth,
DiscLife,
DiscInsure,
Liberty,
Metropolitan,
OutSurance)
unique(HP.data$Insurer)
saveRDS(MSTI, file.path(getwd(),"data/Momentum Short Term.RDS"))
MSTI <- readRDS(file.path(getwd(),"data/Momentum Short Term.RDS"))
HP.data <- rbind(Mom,
MomHealth,
MSTI,
DiscHealth,
DiscLife,
DiscInsure,
Liberty,
Metropolitan,
OutSurance)
unique(HP.data$Insurer)
MSTI$Insurer
MSTI$Insurer <- "MSTI"
saveRDS(MSTI, file.path(getwd(),"data/Momentum Short Term.RDS"))
MSTI <- readRDS(file.path(getwd(),"data/Momentum Short Term.RDS"))
HP.data <- rbind(Mom,
MomHealth,
MSTI,
DiscHealth,
DiscLife,
DiscInsure,
Liberty,
Metropolitan,
OutSurance)
unique(HP.data$Insurer)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
Mom <- readRDS(file.path(getwd(),"data/Momentum.RDS"))
MomHealth <- readRDS(file.path(getwd(),"data/Momentum Health.RDS"))
MSTI <- readRDS(file.path(getwd(),"data/Momentum Short Term.RDS"))
DiscHealth <- readRDS(file.path(getwd(),"data/Discovery Health.RDS"))
DiscLife <- readRDS(file.path(getwd(),"data/Discovery Life.RDS"))
DiscInsure <- readRDS(file.path(getwd(),"data/Discovery Insure.RDS"))
Liberty <- readRDS(file.path(getwd(),"data/Liberty.RDS"))
Metropolitan <- readRDS(file.path(getwd(),"data/Metropolitan.RDS"))
OutSurance <- readRDS(file.path(getwd(),"data/OutSurance.RDS"))
#MiWay <- readRDS(file.path(getwd(),"data/MiWay.RDS"))
HP.data <- rbind(Mom,
MomHealth,
MSTI,
DiscHealth,
DiscLife,
DiscInsure,
Liberty,
Metropolitan,
OutSurance)
HP.data$response.date <- as.POSIXct.numeric(HP.data$response.date, format = "%Y-%m-%d", origin = "1970-01-01", tz = "GMT")
HP.data$post.date <- as.POSIXct.numeric(HP.data$post.date, format = "%Y-%m-%d", origin = "1970-01-01", tz = "GMT")
hp.df <- HP.data
insurer <- "Mom"
hp.df <- hp.df[which(hp.df$Insurer == insurer),]
hp.df <- hp.df[which(hp.df$post.date < paste(substring(as.character(Sys.Date()), 1, 7), "01", sep = "-" )),]
not.zero <- which(hp.df$response.date != 0)
hp.df$response.delay <- difftime(hp.df$response.date[not.zero],hp.df$post.date[not.zero], units = "hours")
hp.df$post.date.month <- as.Date(paste(substring(as.character(hp.df$post.date), 1, 7), "01", sep = "-" ))
ave.time.pm <- data.frame(aggregate(data = hp.df, response.delay ~ post.date.month, FUN = mean))
ave.time.pm$response.delay <- as.numeric(ave.time.pm$response.delay)
ave.time.pm$post.date.month <- as.Date(ave.time.pm$post.date.month )
ggplot(data = ave.time.pm, aes(x = post.date.month, y = response.delay, fill = response.delay)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
ggtitle(paste(as.character(unique(hp.df$Insurer.proper.name)), "turaround time")) +
xlab("Date") +
ylab("Hours")
Mom <- readRDS(file.path(getwd(),"data/Momentum.RDS"))
MomHealth <- readRDS(file.path(getwd(),"data/Momentum Health.RDS"))
MSTI <- readRDS(file.path(getwd(),"data/Momentum Short Term.RDS"))
DiscHealth <- readRDS(file.path(getwd(),"data/Discovery Health.RDS"))
DiscLife <- readRDS(file.path(getwd(),"data/Discovery Life.RDS"))
DiscInsure <- readRDS(file.path(getwd(),"data/Discovery Insure.RDS"))
Liberty <- readRDS(file.path(getwd(),"data/Liberty.RDS"))
Metropolitan <- readRDS(file.path(getwd(),"data/Metropolitan.RDS"))
OutSurance <- readRDS(file.path(getwd(),"data/OutSurance.RDS"))
#MiWay <- readRDS(file.path(getwd(),"data/MiWay.RDS"))
HP.data <- rbind(Mom,
MomHealth,
MSTI,
DiscHealth,
DiscLife,
DiscInsure,
Liberty,
Metropolitan,
OutSurance)
HP.data$response.date <- as.POSIXct.numeric(HP.data$response.date, format = "%Y-%m-%d", origin = "1970-01-01", tz = "GMT")
HP.data$post.date <- as.POSIXct.numeric(HP.data$post.date, format = "%Y-%m-%d", origin = "1970-01-01", tz = "GMT")
hp.df <- HP.data
insurer <- "Mom"
hp.df <- hp.df[which(hp.df$Insurer == insurer),]
hp.df <- hp.df[which(hp.df$post.date < paste(substring(as.character(Sys.Date()), 1, 7), "01", sep = "-" )),]
not.zero <- which(hp.df$response.date != 0)
hp.df$response.delay <- difftime(hp.df$response.date[not.zero],hp.df$post.date[not.zero], units = "hours")
hp.df$post.date.month <- as.Date(paste(substring(as.character(hp.df$post.date), 1, 7), "01", sep = "-" ))
ave.time.pm <- data.frame(aggregate(data = hp.df, response.delay ~ post.date.month, FUN = mean))
ave.time.pm$response.delay <- as.numeric(ave.time.pm$response.delay)
ave.time.pm$post.date.month <- as.Date(ave.time.pm$post.date.month )
time.plot <- ggplot(data = ave.time.pm, aes(x = post.date.month, y = response.delay, fill = response.delay)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
ggtitle(paste(as.character(unique(hp.df$Insurer.proper.name)), "turaround time")) +
xlab("Date") +
ylab("Hours")
complaints <- function(hp.df, insurer) {
hp.df <- hp.df[which(hp.df$Insurer == insurer),]
hp.df <- hp.df[which(hp.df$post.date < paste(substring(as.character(Sys.Date()), 1, 7), "01", sep = "-" )),]
not.zero <- which(hp.df$response.date != 0)
hp.df$response.delay <- difftime(hp.df$response.date[not.zero],hp.df$post.date[not.zero], units = "hours")
hp.df$post.date.month <- as.Date(paste(substring(as.character(hp.df$post.date), 1, 7), "01", sep = "-" ))
ave.time.pm <- data.frame(aggregate(data = hp.df, response.delay ~ post.date.month, FUN = mean))
ave.time.pm$response.delay <- as.numeric(ave.time.pm$response.delay)
ave.time.pm$post.date.month <- as.Date(ave.time.pm$post.date.month )
time.plot <- ggplot(data = ave.time.pm, aes(x = post.date.month, y = response.delay, fill = response.delay)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
ggtitle(paste(as.character(unique(hp.df$Insurer.proper.name)), "turaround time")) +
xlab("Date") +
ylab("Hours")
download.time.data <<- ave.time.pm
download.time.plot <<- time.plot
return(time.plot)
}
complaints(HP.data, "Mom")
shiny::runApp()
complaints(HP.data, "Mom")
shiny::runApp()
time.plot <<- ggplot(data = ave.time.pm, aes(x = post.date.month, y = response.delay, fill = response.delay)) +
shiny::runApp()
shiny::runApp()
